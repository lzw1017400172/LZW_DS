server:
  port: 8200

#断路器超时时间
hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds: 3000
spring:
  application:
    name: lzw-Gateway
  cloud:
    config:   #配置连接注册中心
      name: system        #name和profile确定读取的文件是 config-test1.properties
      profile: dev
      discovery:
        enabled: true   #从配置中心读取文件
        service-id: config-server   #service-id获取高可用的配置中心，既然作为注册中心的client就不需要配置url了
    gateway:    #配置gateway
      discovery:
        locator:
          enabled: true     #开启服务注册和发现功能，因为作为了eureka client，请求转发时不再是转发到url,而是通过eureka clinet进行负载均衡转发到集群
          lower-case-service-id: true  #将请求路径上的服务名配置为小写

      ##gateway配置cors跨域资源共享
#      globalcors:
#        corsConfigurations:
#          '[/**]':
#            allowedOrigins: "http://www.lzw1.com,http://www.lzw2.com,http://www.lzw3.com"
#            allowedMethods: "*"

      #配置转发的路由规则  gateway支持代码配置规则，也支持配置文件配置规则
      routes:
      - id: lzw-item
        uri:  lb://client1    #以lb://开头（lb代表从注册中心获取服务）
        predicates:
        - Path=/lzw-item/**   #匹配c1开头的请求
        filters:
        - StripPrefix=1 #去除掉前面一个前缀 就是 /c1/xzxx/xxx  去掉/c1

        #配置当前转发规则的熔断策略，打开断路器后forward到指定路径
        - name: Hystrix
          args:
            name: fallbackcmd   #熔断器名称唯一
            fallbackUri: 'forward:/hystrix_timeout?param=lzw-item'   #服务降级之后的处理

        #熔断之后的重试策略，当然重试要搭配熔断一起使用
        - name: Retry
          args:
            retries: 3  #重试次数，不包本次，默认3
            status: 404 #重试response code.默认无
            statusSeries: 500
            method: GET #重试的请求，默认GET



eureka:
  client:
      serviceUrl:
        defaultZone: http://localhost:8000/eureka/

